// automatically generated by the FlatBuffers compiler, do not modify

package RMI.RMI_Common._RMI_ParsingClasses;
import RMI.RMI_Common._RMI_ParsingClasses.*;
import RMI.RMI_Classes.*;
import RMI.AutoCreatedClass.*;
import io.netty.buffer.*;
import static java.nio.ByteBuffer.wrap;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class flat_motionCharacterUseItem extends Table {
  public static flat_motionCharacterUseItem getRootAsflat_motionCharacterUseItem(ByteBuffer _bb) { return getRootAsflat_motionCharacterUseItem(_bb, new flat_motionCharacterUseItem()); }
  public static flat_motionCharacterUseItem getRootAsflat_motionCharacterUseItem(ByteBuffer _bb, flat_motionCharacterUseItem obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public flat_motionCharacterUseItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int characterEntityID() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public flat_ItemInfoData usedItem() { return usedItem(new flat_ItemInfoData()); }
  public flat_ItemInfoData usedItem(flat_ItemInfoData obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createflat_motionCharacterUseItem(FlatBufferBuilder builder,
      int characterEntityID,
      int usedItemOffset) {
    builder.startObject(2);
    flat_motionCharacterUseItem.addUsedItem(builder, usedItemOffset);
    flat_motionCharacterUseItem.addCharacterEntityID(builder, characterEntityID);
    return flat_motionCharacterUseItem.endflat_motionCharacterUseItem(builder);
  }

  public static void startflat_motionCharacterUseItem(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addCharacterEntityID(FlatBufferBuilder builder, int characterEntityID) { builder.addInt(0, characterEntityID, 0); }
  public static void addUsedItem(FlatBufferBuilder builder, int usedItemOffset) { builder.addOffset(1, usedItemOffset, 0); }
  public static int endflat_motionCharacterUseItem(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
    public static int createflat_motionCharacterUseItem(FlatBufferBuilder builder,
 motionCharacterUseItem data) {
        int usedItemOffset = flat_ItemInfoData.createflat_ItemInfoData(builder, data.usedItem);
        return createflat_motionCharacterUseItem(builder , data.characterEntityID, usedItemOffset);
    }

    public static byte[] createflat_motionCharacterUseItem(motionCharacterUseItem data) {
        FlatBufferBuilder fbb = new FlatBufferBuilder();
        fbb.finish(flat_motionCharacterUseItem.createflat_motionCharacterUseItem(fbb, data));
        byte[] result = fbb.sizedByteArray();
        fbb = null;
        return result;
    }

    public static motionCharacterUseItem getRootAsflat_motionCharacterUseItem(byte[] data) {
        ByteBuffer buf = ByteBuffer.wrap(data);
        motionCharacterUseItem result = new motionCharacterUseItem(flat_motionCharacterUseItem.getRootAsflat_motionCharacterUseItem( buf ) );
        buf = null;
        return result;
    }

}