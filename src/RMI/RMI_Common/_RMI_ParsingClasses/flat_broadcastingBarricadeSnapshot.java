// automatically generated by the FlatBuffers compiler, do not modify

package RMI.RMI_Common._RMI_ParsingClasses;
import RMI.RMI_Common._RMI_ParsingClasses.*;
import RMI.RMI_Classes.*;
import RMI.AutoCreatedClass.*;
import io.netty.buffer.*;
import static java.nio.ByteBuffer.wrap;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class flat_broadcastingBarricadeSnapshot extends Table {
  public static flat_broadcastingBarricadeSnapshot getRootAsflat_broadcastingBarricadeSnapshot(ByteBuffer _bb) { return getRootAsflat_broadcastingBarricadeSnapshot(_bb, new flat_broadcastingBarricadeSnapshot()); }
  public static flat_broadcastingBarricadeSnapshot getRootAsflat_broadcastingBarricadeSnapshot(ByteBuffer _bb, flat_broadcastingBarricadeSnapshot obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public flat_broadcastingBarricadeSnapshot __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public flat_BarricadeData barricadeSnapshot(int j) { return barricadeSnapshot(new flat_BarricadeData(), j); }
  public flat_BarricadeData barricadeSnapshot(flat_BarricadeData obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int barricadeSnapshotLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }

  public static int createflat_broadcastingBarricadeSnapshot(FlatBufferBuilder builder,
      int barricadeSnapshotOffset) {
    builder.startObject(1);
    flat_broadcastingBarricadeSnapshot.addBarricadeSnapshot(builder, barricadeSnapshotOffset);
    return flat_broadcastingBarricadeSnapshot.endflat_broadcastingBarricadeSnapshot(builder);
  }

  public static void startflat_broadcastingBarricadeSnapshot(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addBarricadeSnapshot(FlatBufferBuilder builder, int barricadeSnapshotOffset) { builder.addOffset(0, barricadeSnapshotOffset, 0); }
  public static int createBarricadeSnapshotVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startBarricadeSnapshotVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endflat_broadcastingBarricadeSnapshot(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
    public static int createflat_broadcastingBarricadeSnapshot(FlatBufferBuilder builder,
 broadcastingBarricadeSnapshot data) {
        int size0 = data.barricadeSnapshot.size();
        int[] barricadeSnapshot_ = new int[size0];
        for (int x = 0; x < size0; x++) {
        BarricadeData aa = data.barricadeSnapshot.poll();
        barricadeSnapshot_[x] = flat_BarricadeData.createflat_BarricadeData(builder, aa);
        }
        int barricadeSnapshotOffset = flat_broadcastingBarricadeSnapshot.createBarricadeSnapshotVector(builder, barricadeSnapshot_);
        return createflat_broadcastingBarricadeSnapshot(builder , barricadeSnapshotOffset);
    }

    public static byte[] createflat_broadcastingBarricadeSnapshot(broadcastingBarricadeSnapshot data) {

        FlatBufferBuilder fbb = new FlatBufferBuilder();
        fbb.finish(flat_broadcastingBarricadeSnapshot.createflat_broadcastingBarricadeSnapshot(fbb, data));
        byte[] result = fbb.sizedByteArray();
        fbb = null;
        return result;
    }

    public static broadcastingBarricadeSnapshot getRootAsflat_broadcastingBarricadeSnapshot(byte[] data) {

        ByteBuffer readData = wrap(data);
        broadcastingBarricadeSnapshot result = new broadcastingBarricadeSnapshot(flat_broadcastingBarricadeSnapshot.getRootAsflat_broadcastingBarricadeSnapshot( readData ) );
        readData = null;
        return result;
    }

}