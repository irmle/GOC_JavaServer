// automatically generated by the FlatBuffers compiler, do not modify

package RMI.RMI_Common._RMI_ParsingClasses;
import RMI.RMI_Common._RMI_ParsingClasses.*;
import RMI.RMI_Classes.*;
import RMI.AutoCreatedClass.*;
import io.netty.buffer.*;
import static java.nio.ByteBuffer.wrap;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class flat_destroyWorldMapEntityInfo extends Table {
  public static flat_destroyWorldMapEntityInfo getRootAsflat_destroyWorldMapEntityInfo(ByteBuffer _bb) { return getRootAsflat_destroyWorldMapEntityInfo(_bb, new flat_destroyWorldMapEntityInfo()); }
  public static flat_destroyWorldMapEntityInfo getRootAsflat_destroyWorldMapEntityInfo(ByteBuffer _bb, flat_destroyWorldMapEntityInfo obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public flat_destroyWorldMapEntityInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public flat_DestroyEntityData destroyedEntityList(int j) { return destroyedEntityList(new flat_DestroyEntityData(), j); }
  public flat_DestroyEntityData destroyedEntityList(flat_DestroyEntityData obj, int j) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int destroyedEntityListLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }

  public static int createflat_destroyWorldMapEntityInfo(FlatBufferBuilder builder,
      int destroyedEntityListOffset) {
    builder.startObject(1);
    flat_destroyWorldMapEntityInfo.addDestroyedEntityList(builder, destroyedEntityListOffset);
    return flat_destroyWorldMapEntityInfo.endflat_destroyWorldMapEntityInfo(builder);
  }

  public static void startflat_destroyWorldMapEntityInfo(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addDestroyedEntityList(FlatBufferBuilder builder, int destroyedEntityListOffset) { builder.addOffset(0, destroyedEntityListOffset, 0); }
  public static int createDestroyedEntityListVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startDestroyedEntityListVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endflat_destroyWorldMapEntityInfo(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
    public static int createflat_destroyWorldMapEntityInfo(FlatBufferBuilder builder,
 destroyWorldMapEntityInfo data) {
        int size0 = data.destroyedEntityList.size();
        int[] destroyedEntityList_ = new int[size0];
        for (int x = 0; x < size0; x++) {
        DestroyEntityData aa = data.destroyedEntityList.poll();
        destroyedEntityList_[x] = flat_DestroyEntityData.createflat_DestroyEntityData(builder, aa);
        }
        int destroyedEntityListOffset = flat_destroyWorldMapEntityInfo.createDestroyedEntityListVector(builder, destroyedEntityList_);
        return createflat_destroyWorldMapEntityInfo(builder , destroyedEntityListOffset);
    }

    public static byte[] createflat_destroyWorldMapEntityInfo(destroyWorldMapEntityInfo data) {
        FlatBufferBuilder fbb = PooledFlatBufferBuilder.DEFAULT.poll();
        fbb.finish(flat_destroyWorldMapEntityInfo.createflat_destroyWorldMapEntityInfo(fbb, data));
        byte[] result = fbb.sizedByteArray();
        fbb.clear(); PooledFlatBufferBuilder.DEFAULT.offer(fbb);
        return result;
    }

    public static destroyWorldMapEntityInfo getRootAsflat_destroyWorldMapEntityInfo(byte[] data) {
        ByteBuf readData = PooledByteBufAllocator.DEFAULT.directBuffer(data.length);
        readData.writeBytes(data);
        destroyWorldMapEntityInfo result = new destroyWorldMapEntityInfo(flat_destroyWorldMapEntityInfo.getRootAsflat_destroyWorldMapEntityInfo( readData.nioBuffer() ) );
        readData.release();
        return result;
    }

}