// automatically generated by the FlatBuffers compiler, do not modify

package Network.RMI_Common.RMI_ParsingClasses;
import static java.nio.ByteBuffer.wrap;

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class flat_userFailedUseItem extends Table {
  public static flat_userFailedUseItem getRootAsflat_userFailedUseItem(ByteBuffer _bb) { return getRootAsflat_userFailedUseItem(_bb, new flat_userFailedUseItem()); }
  public static flat_userFailedUseItem getRootAsflat_userFailedUseItem(ByteBuffer _bb, flat_userFailedUseItem obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public flat_userFailedUseItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int errorCode() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createflat_userFailedUseItem(FlatBufferBuilder builder,
      int errorCode) {
    builder.startObject(1);
    flat_userFailedUseItem.addErrorCode(builder, errorCode);
    return flat_userFailedUseItem.endflat_userFailedUseItem(builder);
  }

  public static void startflat_userFailedUseItem(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addErrorCode(FlatBufferBuilder builder, int errorCode) { builder.addInt(0, errorCode, 0); }
  public static int endflat_userFailedUseItem(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
    public static int createflat_userFailedUseItem(FlatBufferBuilder builder,
 userFailedUseItem data) {
        return createflat_userFailedUseItem(builder , data.errorCode);
    }

    public static byte[] createflat_userFailedUseItem(userFailedUseItem data) {
        FlatBufferBuilder fbb = new FlatBufferBuilder();
        fbb.finish(flat_userFailedUseItem.createflat_userFailedUseItem(fbb, data));
        byte[] result = fbb.sizedByteArray();
        fbb = null;
        return result;
    }

    public static userFailedUseItem getRootAsflat_userFailedUseItem(byte[] data) {
        ByteBuffer buf = ByteBuffer.wrap(data);
        userFailedUseItem result = new userFailedUseItem(flat_userFailedUseItem.getRootAsflat_userFailedUseItem( buf ) );
        buf = null;
        return result;
    }

}