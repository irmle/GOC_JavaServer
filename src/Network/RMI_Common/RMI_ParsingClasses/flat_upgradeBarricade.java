// automatically generated by the FlatBuffers compiler, do not modify

package Network.RMI_Common.RMI_ParsingClasses;

import Network.RMI_Classes.*;
import Network.AutoCreatedClass.*;
import io.netty.buffer.*;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class flat_upgradeBarricade extends Table {
  public static flat_upgradeBarricade getRootAsflat_upgradeBarricade(ByteBuffer _bb) { return getRootAsflat_upgradeBarricade(_bb, new flat_upgradeBarricade()); }
  public static flat_upgradeBarricade getRootAsflat_upgradeBarricade(ByteBuffer _bb, flat_upgradeBarricade obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public flat_upgradeBarricade __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int worldMapID() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int userEntityID() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int barricadeEntityID() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int barricadeType() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createflat_upgradeBarricade(FlatBufferBuilder builder,
      int worldMapID,
      int userEntityID,
      int barricadeEntityID,
      int barricadeType) {
    builder.startObject(4);
    flat_upgradeBarricade.addBarricadeType(builder, barricadeType);
    flat_upgradeBarricade.addBarricadeEntityID(builder, barricadeEntityID);
    flat_upgradeBarricade.addUserEntityID(builder, userEntityID);
    flat_upgradeBarricade.addWorldMapID(builder, worldMapID);
    return flat_upgradeBarricade.endflat_upgradeBarricade(builder);
  }

  public static void startflat_upgradeBarricade(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addWorldMapID(FlatBufferBuilder builder, int worldMapID) { builder.addInt(0, worldMapID, 0); }
  public static void addUserEntityID(FlatBufferBuilder builder, int userEntityID) { builder.addInt(1, userEntityID, 0); }
  public static void addBarricadeEntityID(FlatBufferBuilder builder, int barricadeEntityID) { builder.addInt(2, barricadeEntityID, 0); }
  public static void addBarricadeType(FlatBufferBuilder builder, int barricadeType) { builder.addInt(3, barricadeType, 0); }
  public static int endflat_upgradeBarricade(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
    public static int createflat_upgradeBarricade(FlatBufferBuilder builder,
 upgradeBarricade data) {
        return createflat_upgradeBarricade(builder , data.worldMapID, data.userEntityID, data.barricadeEntityID, data.barricadeType);
    }

    public static byte[] createflat_upgradeBarricade(upgradeBarricade data) {
        FlatBufferBuilder fbb = new FlatBufferBuilder();
        fbb.finish(flat_upgradeBarricade.createflat_upgradeBarricade(fbb, data));
        byte[] result = fbb.sizedByteArray();
        fbb = null;
        return result;
    }

    public static upgradeBarricade getRootAsflat_upgradeBarricade(byte[] data) {
        ByteBuffer buf = ByteBuffer.wrap(data);
        upgradeBarricade result = new upgradeBarricade(flat_upgradeBarricade.getRootAsflat_upgradeBarricade( buf ) );
        buf = null;
        return result;
    }

}