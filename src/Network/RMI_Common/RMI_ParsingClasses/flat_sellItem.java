// automatically generated by the FlatBuffers compiler, do not modify

package Network.RMI_Common.RMI_ParsingClasses;
import static java.nio.ByteBuffer.wrap;

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class flat_sellItem extends Table {
  public static flat_sellItem getRootAsflat_sellItem(ByteBuffer _bb) { return getRootAsflat_sellItem(_bb, new flat_sellItem()); }
  public static flat_sellItem getRootAsflat_sellItem(ByteBuffer _bb, flat_sellItem obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public flat_sellItem __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int worldMapID() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int userEntityID() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public short itemSlotNum() { int o = __offset(8); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public int itemType() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public short itemCount() { int o = __offset(12); return o != 0 ? bb.getShort(o + bb_pos) : 0; }

  public static int createflat_sellItem(FlatBufferBuilder builder,
      int worldMapID,
      int userEntityID,
      short itemSlotNum,
      int itemType,
      short itemCount) {
    builder.startObject(5);
    flat_sellItem.addItemType(builder, itemType);
    flat_sellItem.addUserEntityID(builder, userEntityID);
    flat_sellItem.addWorldMapID(builder, worldMapID);
    flat_sellItem.addItemCount(builder, itemCount);
    flat_sellItem.addItemSlotNum(builder, itemSlotNum);
    return flat_sellItem.endflat_sellItem(builder);
  }

  public static void startflat_sellItem(FlatBufferBuilder builder) { builder.startObject(5); }
  public static void addWorldMapID(FlatBufferBuilder builder, int worldMapID) { builder.addInt(0, worldMapID, 0); }
  public static void addUserEntityID(FlatBufferBuilder builder, int userEntityID) { builder.addInt(1, userEntityID, 0); }
  public static void addItemSlotNum(FlatBufferBuilder builder, short itemSlotNum) { builder.addShort(2, itemSlotNum, 0); }
  public static void addItemType(FlatBufferBuilder builder, int itemType) { builder.addInt(3, itemType, 0); }
  public static void addItemCount(FlatBufferBuilder builder, short itemCount) { builder.addShort(4, itemCount, 0); }
  public static int endflat_sellItem(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
    public static int createflat_sellItem(FlatBufferBuilder builder,
 sellItem data) {
        return createflat_sellItem(builder , data.worldMapID, data.userEntityID, data.itemSlotNum, data.itemType, data.itemCount);
    }

    public static byte[] createflat_sellItem(sellItem data) {
        FlatBufferBuilder fbb = new FlatBufferBuilder();
        fbb.finish(flat_sellItem.createflat_sellItem(fbb, data));
        byte[] result = fbb.sizedByteArray();
        fbb = null;
        return result;
    }

    public static sellItem getRootAsflat_sellItem(byte[] data) {
        ByteBuffer buf = ByteBuffer.wrap(data);
        sellItem result = new sellItem(flat_sellItem.getRootAsflat_sellItem( buf ) );
        buf = null;
        return result;
    }

}