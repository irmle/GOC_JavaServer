// automatically generated by the FlatBuffers compiler, do not modify

package Network.RMI_Common.RMI_ParsingClasses;

import Network.RMI_Classes.*;
import Network.AutoCreatedClass.*;
import io.netty.buffer.*;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class flat_CharacterMoveData extends Table {
  public static flat_CharacterMoveData getRootAsflat_CharacterMoveData(ByteBuffer _bb) { return getRootAsflat_CharacterMoveData(_bb, new flat_CharacterMoveData()); }
  public static flat_CharacterMoveData getRootAsflat_CharacterMoveData(ByteBuffer _bb, flat_CharacterMoveData obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public flat_CharacterMoveData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int entityID() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public float posX() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float posY() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float posZ() { int o = __offset(10); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float velX() { int o = __offset(12); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float velY() { int o = __offset(14); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float velZ() { int o = __offset(16); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float quarternionY() { int o = __offset(18); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float quarternionZ() { int o = __offset(20); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createflat_CharacterMoveData(FlatBufferBuilder builder,
      int entityID,
      float posX,
      float posY,
      float posZ,
      float velX,
      float velY,
      float velZ,
      float quarternionY,
      float quarternionZ) {
    builder.startObject(9);
    flat_CharacterMoveData.addQuarternionZ(builder, quarternionZ);
    flat_CharacterMoveData.addQuarternionY(builder, quarternionY);
    flat_CharacterMoveData.addVelZ(builder, velZ);
    flat_CharacterMoveData.addVelY(builder, velY);
    flat_CharacterMoveData.addVelX(builder, velX);
    flat_CharacterMoveData.addPosZ(builder, posZ);
    flat_CharacterMoveData.addPosY(builder, posY);
    flat_CharacterMoveData.addPosX(builder, posX);
    flat_CharacterMoveData.addEntityID(builder, entityID);
    return flat_CharacterMoveData.endflat_CharacterMoveData(builder);
  }

  public static void startflat_CharacterMoveData(FlatBufferBuilder builder) { builder.startObject(9); }
  public static void addEntityID(FlatBufferBuilder builder, int entityID) { builder.addInt(0, entityID, 0); }
  public static void addPosX(FlatBufferBuilder builder, float posX) { builder.addFloat(1, posX, 0.0f); }
  public static void addPosY(FlatBufferBuilder builder, float posY) { builder.addFloat(2, posY, 0.0f); }
  public static void addPosZ(FlatBufferBuilder builder, float posZ) { builder.addFloat(3, posZ, 0.0f); }
  public static void addVelX(FlatBufferBuilder builder, float velX) { builder.addFloat(4, velX, 0.0f); }
  public static void addVelY(FlatBufferBuilder builder, float velY) { builder.addFloat(5, velY, 0.0f); }
  public static void addVelZ(FlatBufferBuilder builder, float velZ) { builder.addFloat(6, velZ, 0.0f); }
  public static void addQuarternionY(FlatBufferBuilder builder, float quarternionY) { builder.addFloat(7, quarternionY, 0.0f); }
  public static void addQuarternionZ(FlatBufferBuilder builder, float quarternionZ) { builder.addFloat(8, quarternionZ, 0.0f); }
  public static int endflat_CharacterMoveData(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
    public static int createflat_CharacterMoveData(FlatBufferBuilder builder,
 CharacterMoveData data) {
        return createflat_CharacterMoveData(builder , data.entityID, data.posX, data.posY, data.posZ, data.velX, data.velY, data.velZ, data.quarternionY, data.quarternionZ);
    }

    public static byte[] createflat_CharacterMoveData(CharacterMoveData data) {
        FlatBufferBuilder fbb = new FlatBufferBuilder();
        fbb.finish(flat_CharacterMoveData.createflat_CharacterMoveData(fbb, data));
        byte[] result = fbb.sizedByteArray();
        fbb = null;
        return result;
    }

    public static CharacterMoveData getRootAsflat_CharacterMoveData(byte[] data) {
        ByteBuffer buf = ByteBuffer.wrap(data);
        CharacterMoveData result = new CharacterMoveData(flat_CharacterMoveData.getRootAsflat_CharacterMoveData( buf ) );
        buf = null;
        return result;
    }

}