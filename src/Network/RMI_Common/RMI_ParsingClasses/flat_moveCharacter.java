// automatically generated by the FlatBuffers compiler, do not modify

package Network.RMI_Common.RMI_ParsingClasses;

import Network.RMI_Classes.*;
import Network.AutoCreatedClass.*;
import io.netty.buffer.*;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class flat_moveCharacter extends Table {
  public static flat_moveCharacter getRootAsflat_moveCharacter(ByteBuffer _bb) { return getRootAsflat_moveCharacter(_bb, new flat_moveCharacter()); }
  public static flat_moveCharacter getRootAsflat_moveCharacter(ByteBuffer _bb, flat_moveCharacter obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public flat_moveCharacter __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int worldMapID() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public flat_CharacterMoveData characterMoveData() { return characterMoveData(new flat_CharacterMoveData()); }
  public flat_CharacterMoveData characterMoveData(flat_CharacterMoveData obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createflat_moveCharacter(FlatBufferBuilder builder,
      int worldMapID,
      int characterMoveDataOffset) {
    builder.startObject(2);
    flat_moveCharacter.addCharacterMoveData(builder, characterMoveDataOffset);
    flat_moveCharacter.addWorldMapID(builder, worldMapID);
    return flat_moveCharacter.endflat_moveCharacter(builder);
  }

  public static void startflat_moveCharacter(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addWorldMapID(FlatBufferBuilder builder, int worldMapID) { builder.addInt(0, worldMapID, 0); }
  public static void addCharacterMoveData(FlatBufferBuilder builder, int characterMoveDataOffset) { builder.addOffset(1, characterMoveDataOffset, 0); }
  public static int endflat_moveCharacter(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
    public static int createflat_moveCharacter(FlatBufferBuilder builder,
 moveCharacter data) {
        int characterMoveDataOffset = flat_CharacterMoveData.createflat_CharacterMoveData(builder, data.characterMoveData);
        return createflat_moveCharacter(builder , data.worldMapID, characterMoveDataOffset);
    }

    public static byte[] createflat_moveCharacter(moveCharacter data) {
        FlatBufferBuilder fbb = new FlatBufferBuilder();
        fbb.finish(flat_moveCharacter.createflat_moveCharacter(fbb, data));
        byte[] result = fbb.sizedByteArray();
        fbb = null;
        return result;
    }

    public static moveCharacter getRootAsflat_moveCharacter(byte[] data) {
        ByteBuffer buf = ByteBuffer.wrap(data);
        moveCharacter result = new moveCharacter(flat_moveCharacter.getRootAsflat_moveCharacter( buf ) );
        buf = null;
        return result;
    }

}