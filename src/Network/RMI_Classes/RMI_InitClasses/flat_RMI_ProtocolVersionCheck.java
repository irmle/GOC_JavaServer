// automatically generated by the FlatBuffers compiler, do not modify

package Network.RMI_Classes.RMI_InitClasses;

import java.nio.*;
import java.lang.*;

import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class flat_RMI_ProtocolVersionCheck extends Table {
  public static flat_RMI_ProtocolVersionCheck getRootAsflat_RMI_ProtocolVersionCheck(ByteBuffer _bb) { return getRootAsflat_RMI_ProtocolVersionCheck(_bb, new flat_RMI_ProtocolVersionCheck()); }
  public static flat_RMI_ProtocolVersionCheck getRootAsflat_RMI_ProtocolVersionCheck(ByteBuffer _bb, flat_RMI_ProtocolVersionCheck obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public flat_RMI_ProtocolVersionCheck __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int rmiProtocolVersion() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createflat_RMI_ProtocolVersionCheck(FlatBufferBuilder builder,
      int rmi_protocol_version) {
    builder.startObject(1);
    flat_RMI_ProtocolVersionCheck.addRmiProtocolVersion(builder, rmi_protocol_version);
    return flat_RMI_ProtocolVersionCheck.endflat_RMI_ProtocolVersionCheck(builder);
  }

  public static void startflat_RMI_ProtocolVersionCheck(FlatBufferBuilder builder) { builder.startObject(1); }
  public static void addRmiProtocolVersion(FlatBufferBuilder builder, int rmiProtocolVersion) { builder.addInt(0, rmiProtocolVersion, 0); }
  public static int endflat_RMI_ProtocolVersionCheck(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
    public static int createflat_RMI_ProtocolVersionCheck(FlatBufferBuilder builder,
 RMI_ProtocolVersionCheck data) {
        return createflat_RMI_ProtocolVersionCheck(builder , data.rmi_protocol_version);
    }

    public static byte[] createflat_RMI_ProtocolVersionCheck(RMI_ProtocolVersionCheck data) {
        FlatBufferBuilder fbb = new FlatBufferBuilder();
        fbb.finish(flat_RMI_ProtocolVersionCheck.createflat_RMI_ProtocolVersionCheck(fbb, data));
        byte[] result = fbb.sizedByteArray();
        fbb = null;
        return result;
    }

    public static RMI_ProtocolVersionCheck getRootAsflat_RMI_ProtocolVersionCheck(byte[] data) {
        ByteBuffer readData = ByteBuffer.wrap(data);
        RMI_ProtocolVersionCheck result = new RMI_ProtocolVersionCheck(flat_RMI_ProtocolVersionCheck.getRootAsflat_RMI_ProtocolVersionCheck( readData ) );
        readData = null;
        return result;
    }
}